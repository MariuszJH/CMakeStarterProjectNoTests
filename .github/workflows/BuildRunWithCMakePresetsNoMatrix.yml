name: Build and run with CMakePresets.json, no parameter matrix

on:
  push: 
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:

  build-on-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Tool versions
      shell: bash
      run: | 
        echo g++ --version
        g++ --version
        echo 
        echo clang++ --version
        clang++ --version
        echo 
        echo cmake --version
        cmake --version
        echo 
        echo ninja --version
        ninja --version

    - name: CMake build and run --- Make, Gnu, Debug
      run: |
        echo CMake configure
        cmake --preset Make-Gnu-Debug
        echo 
        echo CMake build
        cmake --build --preset Make-Gnu-Debug
        echo 
        echo CMake run
        cmake --build --preset Make-Gnu-Debug --target run

    - name: CMake build and run --- Make, Gnu, Release
      run: |
        echo CMake configure
        cmake --preset Make-Gnu-Release
        echo 
        echo CMake build
        cmake --build --preset Make-Gnu-Release
        echo 
        echo CMake run
        cmake --build --preset Make-Gnu-Release --target run

    - name: CMake build and run --- Make, Clang, Debug
      run: |
        echo CMake configure
        cmake --preset Make-Clang-Debug
        echo 
        echo CMake build
        cmake --build --preset Make-Clang-Debug
        echo 
        echo CMake run
        cmake --build --preset Make-Clang-Debug --target run

    - name: CMake build and run --- Make, Clang, Release
      run: |
        echo CMake configure
        cmake --preset Make-Clang-Release
        echo 
        echo CMake build
        cmake --build --preset Make-Clang-Release
        echo 
        echo CMake run
        cmake --build --preset Make-Clang-Release --target run

    - name: CMake build and run --- Ninja, Gnu, Debug
      run: |
        echo CMake configure
        cmake --preset Ninja-Gnu-Debug
        echo 
        echo CMake build
        cmake --build --preset Ninja-Gnu-Debug
        echo 
        echo CMake run
        cmake --build --preset Ninja-Gnu-Debug --target run

    - name: CMake build and run --- Ninja, Gnu, Release
      run: |
        echo CMake configure
        cmake --preset Ninja-Gnu-Release
        echo 
        echo CMake build
        cmake --build --preset Ninja-Gnu-Release
        echo 
        echo CMake run
        cmake --build --preset Ninja-Gnu-Release --target run

    - name: CMake build and run --- Ninja, Clang, Debug
      run: |
        echo CMake configure
        cmake --preset Ninja-Clang-Debug
        echo 
        echo CMake build
        cmake --build --preset Ninja-Clang-Debug
        echo 
        echo CMake run
        cmake --build --preset Ninja-Clang-Debug --target run

    - name: CMake build and run --- Ninja, Clang, Release
      run: |
        echo CMake configure
        cmake --preset Ninja-Clang-Release
        echo 
        echo CMake build
        cmake --build --preset Ninja-Clang-Release
        echo 
        echo CMake run
        cmake --build --preset Ninja-Clang-Release --target run

    - name: CMake build and run --- NinjaMC, Gnu, Debug & Release
      run: |
        cmake --preset NinjaMC-Gnu
        cmake --build --preset NinjaMC-Gnu --config Debug --target run
        cmake --build --preset NinjaMC-Gnu --config Release --target run

    - name: CMake build and run --- NinjaMC, Clang, Debug & Release
      run: |
        cmake --preset NinjaMC-Clang
        cmake --build --preset NinjaMC-Clang --config Debug --target run
        cmake --build --preset NinjaMC-Clang --config Release --target run

    # - name: CMake build and run --- NinjaMC, Gnu, Debug & Release
    #   run: |
    #     echo CMake configure
    #     cmake --preset NinjaMC-Gnu
    #     echo 
    #     echo CMake build and run (Debug)
    #     cmake --build --preset NinjaMC-Gnu --config Debug --target run
    #     echo 
    #     echo CMake build and run (Release)
    #     cmake --build --preset NinjaMC-Gnu --config Release --target run

    #     cmake --preset NinjaMC-Gnu
    #     cmake --build --preset NinjaMC-Gnu --config Debug --target run
    #     cmake --build --preset NinjaMC-Gnu --config Release --target run


    # - name: CMake build and run --- NinjaMC, Clang, Debug & Release
    #   run: |
    #     echo CMake configure
    #     cmake --preset NinjaMC-Clang
    #     echo 
    #     echo CMake build and run (Debug)
    #     cmake --build --preset NinjaMC-Clang --config Debug --target run
    #     echo 
    #     echo CMake build and run (Release)
    #     cmake --build --preset NinjaMC-Clang --config Release --target run


  build-on-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Tool versions
      shell: bash
      run: | 
        echo g++ --version
        g++ --version
        echo 
        echo clang++ --version
        clang++ --version
        echo 
        echo cmake --version
        cmake --version
        echo 
        echo ninja --version
        ninja --version

    - name: CMake build and run --- Make, Clang, Debug
      run: |
        echo CMake configure
        cmake --preset Make-Clang-Debug
        echo 
        echo CMake build
        cmake --build --preset Make-Clang-Debug
        echo 
        echo CMake run
        cmake --build --preset Make-Clang-Debug --target run

    - name: CMake build and run --- Make, Clang, Release
      run: |
        echo CMake configure
        cmake --preset Make-Clang-Release
        echo 
        echo CMake build
        cmake --build --preset Make-Clang-Release
        echo 
        echo CMake run
        cmake --build --preset Make-Clang-Release --target run

    - name: CMake build and run --- Ninja, Clang, Debug
      run: |
        echo CMake configure
        cmake --preset Ninja-Clang-Debug
        echo 
        echo CMake build
        cmake --build --preset Ninja-Clang-Debug
        echo 
        echo CMake run
        cmake --build --preset Ninja-Clang-Debug --target run

    - name: CMake build and run --- Ninja, Clang, Release
      run: |
        echo CMake configure
        cmake --preset Ninja-Clang-Release
        echo 
        echo CMake build
        cmake --build --preset Ninja-Clang-Release
        echo 
        echo CMake run
        cmake --build --preset Ninja-Clang-Release --target run

    # - name: CMake build and run --- NinjaMC, Clang, Debug & Release
    #   run: |
    #     echo CMake configure
    #     cmake --preset NinjaMC-Clang
    #     echo 
    #     echo CMake build and run (Debug)
    #     cmake --build --preset NinjaMC-Clang --config Debug --target run
    #     echo 
    #     echo CMake build and run (Release)
    #     cmake --build --preset NinjaMC-Clang --config Release --target run

    - name: CMake build and run --- NinjaMC, Clang, Debug & Release
      run: |
        cmake --preset NinjaMC-Clang
        cmake --build --preset NinjaMC-Clang --config Debug --target run
        cmake --build --preset NinjaMC-Clang --config Release --target run

    - name: CMake build and run --- Xcode, Clang, Debug & Release
      run: |
        cmake --preset Xcode-Clang
        cmake --build --preset Xcode-Clang --config Debug --target run
        cmake --build --preset Xcode-Clang --config Release --target run


  build-on-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup MSVC compiler
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Tool versions
      shell: bash
      run: | 
        echo cl
        cl
        echo 
        echo cmake --version
        cmake --version
        echo 
        echo ninja --version
        ninja --version

    - name: CMake build and run --- NMake, Msvc, Debug
      shell: bash
      run: |
        echo CMake configure
        cmake --preset NMake-Msvc-Debug
        echo 
        echo CMake build
        cmake --build --preset NMake-Msvc-Debug
        echo 
        echo CMake run
        cmake --build --preset NMake-Msvc-Debug --target run

    - name: CMake build and run --- NMake, Msvc, Release
      shell: bash
      run: |
        echo CMake configure
        cmake --preset NMake-Msvc-Release
        echo 
        echo CMake build
        cmake --build --preset NMake-Msvc-Release
        echo 
        echo CMake run
        cmake --build --preset NMake-Msvc-Release --target run

    - name: CMake build and run --- Ninja, Msvc, Debug
      shell: bash
      run: |
        echo CMake configure
        cmake --preset Ninja-Msvc-Debug
        echo 
        echo CMake build
        cmake --build --preset Ninja-Msvc-Debug
        echo 
        echo CMake run
        cmake --build --preset Ninja-Msvc-Debug --target run

    - name: CMake build and run --- Ninja, Msvc, Release
      shell: bash
      run: |
        echo CMake configure
        cmake --preset Ninja-Msvc-Release
        echo 
        echo CMake build
        cmake --build --preset Ninja-Msvc-Release
        echo 
        echo CMake run
        cmake --build --preset Ninja-Msvc-Release --target run

    - name: CMake build and run --- NinjaMC, Msvc, Debug & Release
      shell: bash
      run: |
        cmake --preset NinjaMC-Msvc
        cmake --build --preset NinjaMC-Msvc --config Debug --target run
        cmake --build --preset NinjaMC-Msvc --config Release --target run

    # - name: CMake build and run --- NinjaMC, Msvc, Debug & Release
      # shell: bash
    #   run: |
    #     echo CMake configure
    #     cmake --preset NinjaMC-Msvc
    #     echo 
    #     echo CMake build and run (Debug)
    #     cmake --build --preset NinjaMC-Msvc --config Debug --target run
    #     echo 
    #     echo CMake build and run (Release)
    #     cmake --build --preset NinjaMC-Msvc --config Release --target run

    - name: CMake build and run --- VSx32, Msvc, Debug & Release
      shell: bash
      run: |
        echo CMake configure
        cmake --preset VSx32-Msvc
        echo CMake build (debug) and run
        cmake --build --preset VSx32-Msvc --config Debug --target run
        echo CMake build (release) and run
        cmake --build --preset VSx32-Msvc --config Release --target run

    - name: CMake build and run --- VSx64, Msvc, Debug & Release
      shell: bash
      run: |
        echo CMake configure
        cmake --preset VSx64-Msvc
        echo CMake build (debug) and run
        cmake --build --preset VSx64-Msvc --config Debug --target run
        echo CMake build (release) and run
        cmake --build --preset VSx64-Msvc --config Release --target run
